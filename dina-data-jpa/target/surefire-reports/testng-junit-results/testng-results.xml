<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="89" passed="89">
  <reporter-output>
  </reporter-output>
  <suite name="Surefire suite" duration-ms="5676" started-at="2016-02-10T11:13:50Z" finished-at="2016-02-10T11:13:56Z">
    <groups>
    </groups>
    <test name="Surefire test" duration-ms="5676" started-at="2016-02-10T11:13:50Z" finished-at="2016-02-10T11:13:56Z">
      <class name="se.nrm.dina.data.logic.DinaDataLogicNGTest">
        <test-method status="PASS" signature="testDinaDataLogicConstructor()[pri:0, instance:testDinaDataLogicConstructor(se.nrm.dina.data.logic.DinaDataLogicNGTest)]" name="testDinaDataLogicConstructor" duration-ms="14" started-at="2016-02-10T12:13:52Z" finished-at="2016-02-10T12:13:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDinaDataLogicConstructor -->
        <test-method status="PASS" signature="testFindAll_StringFailure()[pri:0, instance:testFindAll_StringFailure(se.nrm.dina.data.logic.DinaDataLogicNGTest)]" name="testFindAll_StringFailure" duration-ms="3" started-at="2016-02-10T12:13:52Z" finished-at="2016-02-10T12:13:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindAll_StringFailure -->
        <test-method status="PASS" signature="testFindAll_7args()[pri:0, instance:testFindAll_7args(se.nrm.dina.data.logic.DinaDataLogicNGTest)]" name="testFindAll_7args" duration-ms="3" started-at="2016-02-10T12:13:52Z" finished-at="2016-02-10T12:13:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindAll_7args -->
        <test-method status="PASS" signature="testFindAll_7argsFailure()[pri:0, instance:testFindAll_7argsFailure(se.nrm.dina.data.logic.DinaDataLogicNGTest)]" name="testFindAll_7argsFailure" duration-ms="3" started-at="2016-02-10T12:13:52Z" finished-at="2016-02-10T12:13:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindAll_7argsFailure -->
        <test-method status="PASS" signature="testFindAllBySearchCriteria()[pri:0, instance:testFindAllBySearchCriteria(se.nrm.dina.data.logic.DinaDataLogicNGTest)]" name="testFindAllBySearchCriteria" duration-ms="22" started-at="2016-02-10T12:13:52Z" finished-at="2016-02-10T12:13:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindAllBySearchCriteria -->
        <test-method status="PASS" signature="testFindAllBySearchCriteriaWithExactSearch()[pri:0, instance:testFindAllBySearchCriteriaWithExactSearch(se.nrm.dina.data.logic.DinaDataLogicNGTest)]" name="testFindAllBySearchCriteriaWithExactSearch" duration-ms="3" started-at="2016-02-10T12:13:52Z" finished-at="2016-02-10T12:13:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindAllBySearchCriteriaWithExactSearch -->
        <test-method status="PASS" signature="testFindAllBySearchCriteria1()[pri:0, instance:testFindAllBySearchCriteria1(se.nrm.dina.data.logic.DinaDataLogicNGTest)]" name="testFindAllBySearchCriteria1" duration-ms="5" started-at="2016-02-10T12:13:52Z" finished-at="2016-02-10T12:13:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindAllBySearchCriteria1 -->
        <test-method status="PASS" signature="testFindAllBySearchCriteria1WithExactSearch()[pri:0, instance:testFindAllBySearchCriteria1WithExactSearch(se.nrm.dina.data.logic.DinaDataLogicNGTest)]" name="testFindAllBySearchCriteria1WithExactSearch" duration-ms="4" started-at="2016-02-10T12:13:52Z" finished-at="2016-02-10T12:13:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindAllBySearchCriteria1WithExactSearch -->
        <test-method status="PASS" signature="testFindAllBySearchCriteria2()[pri:0, instance:testFindAllBySearchCriteria2(se.nrm.dina.data.logic.DinaDataLogicNGTest)]" name="testFindAllBySearchCriteria2" duration-ms="5" started-at="2016-02-10T12:13:52Z" finished-at="2016-02-10T12:13:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindAllBySearchCriteria2 -->
        <test-method status="PASS" signature="testFindAllBySearchCriteria2WithExactSearch()[pri:0, instance:testFindAllBySearchCriteria2WithExactSearch(se.nrm.dina.data.logic.DinaDataLogicNGTest)]" name="testFindAllBySearchCriteria2WithExactSearch" duration-ms="5" started-at="2016-02-10T12:13:52Z" finished-at="2016-02-10T12:13:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindAllBySearchCriteria2WithExactSearch -->
        <test-method status="PASS" signature="testFindAllBySearchCriteriaFailure()[pri:0, instance:testFindAllBySearchCriteriaFailure(se.nrm.dina.data.logic.DinaDataLogicNGTest)]" name="testFindAllBySearchCriteriaFailure" duration-ms="4" started-at="2016-02-10T12:13:52Z" finished-at="2016-02-10T12:13:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindAllBySearchCriteriaFailure -->
        <test-method status="PASS" signature="testFindAllBySearchCriteriaFailureWithExactSearch()[pri:0, instance:testFindAllBySearchCriteriaFailureWithExactSearch(se.nrm.dina.data.logic.DinaDataLogicNGTest)]" name="testFindAllBySearchCriteriaFailureWithExactSearch" duration-ms="4" started-at="2016-02-10T12:13:52Z" finished-at="2016-02-10T12:13:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindAllBySearchCriteriaFailureWithExactSearch -->
        <test-method status="PASS" signature="testFindByIdString()[pri:0, instance:testFindByIdString(se.nrm.dina.data.logic.DinaDataLogicNGTest)]" name="testFindByIdString" duration-ms="5" started-at="2016-02-10T12:13:52Z" finished-at="2016-02-10T12:13:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindByIdString -->
        <test-method status="PASS" signature="testFindEntityCount()[pri:0, instance:testFindEntityCount(se.nrm.dina.data.logic.DinaDataLogicNGTest)]" name="testFindEntityCount" duration-ms="5" started-at="2016-02-10T12:13:52Z" finished-at="2016-02-10T12:13:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindEntityCount -->
        <test-method status="PASS" signature="testFindEntityCountFailure()[pri:0, instance:testFindEntityCountFailure(se.nrm.dina.data.logic.DinaDataLogicNGTest)]" name="testFindEntityCountFailure" duration-ms="3" started-at="2016-02-10T12:13:52Z" finished-at="2016-02-10T12:13:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindEntityCountFailure -->
        <test-method status="PASS" signature="testCreateEntity()[pri:0, instance:testCreateEntity(se.nrm.dina.data.logic.DinaDataLogicNGTest)]" name="testCreateEntity" duration-ms="2181" started-at="2016-02-10T12:13:52Z" finished-at="2016-02-10T12:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateEntity -->
        <test-method status="PASS" signature="testCreateEntityFailure()[pri:0, instance:testCreateEntityFailure(se.nrm.dina.data.logic.DinaDataLogicNGTest)]" name="testCreateEntityFailure" duration-ms="771" started-at="2016-02-10T12:13:54Z" finished-at="2016-02-10T12:13:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateEntityFailure -->
        <test-method status="PASS" signature="testUpdateEntity()[pri:0, instance:testUpdateEntity(se.nrm.dina.data.logic.DinaDataLogicNGTest)]" name="testUpdateEntity" duration-ms="592" started-at="2016-02-10T12:13:55Z" finished-at="2016-02-10T12:13:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateEntity -->
        <test-method status="PASS" signature="testUpdateEntityFailure()[pri:0, instance:testUpdateEntityFailure(se.nrm.dina.data.logic.DinaDataLogicNGTest)]" name="testUpdateEntityFailure" duration-ms="494" started-at="2016-02-10T12:13:55Z" finished-at="2016-02-10T12:13:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateEntityFailure -->
        <test-method status="PASS" signature="testUpdateEntityFailure1()[pri:0, instance:testUpdateEntityFailure1(se.nrm.dina.data.logic.DinaDataLogicNGTest)]" name="testUpdateEntityFailure1" duration-ms="8" started-at="2016-02-10T12:13:56Z" finished-at="2016-02-10T12:13:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateEntityFailure1 -->
        <test-method status="PASS" signature="testDeleteEntity()[pri:0, instance:testDeleteEntity(se.nrm.dina.data.logic.DinaDataLogicNGTest)]" name="testDeleteEntity" duration-ms="2" started-at="2016-02-10T12:13:56Z" finished-at="2016-02-10T12:13:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteEntity -->
        <test-method status="PASS" signature="testDeleteEntity1()[pri:0, instance:testDeleteEntity1(se.nrm.dina.data.logic.DinaDataLogicNGTest)]" name="testDeleteEntity1" duration-ms="3" started-at="2016-02-10T12:13:56Z" finished-at="2016-02-10T12:13:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteEntity1 -->
        <test-method status="PASS" signature="testDeleteEntityFailure()[pri:0, instance:testDeleteEntityFailure(se.nrm.dina.data.logic.DinaDataLogicNGTest)]" name="testDeleteEntityFailure" duration-ms="4" started-at="2016-02-10T12:13:56Z" finished-at="2016-02-10T12:13:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteEntityFailure -->
        <test-method status="PASS" signature="testFindAll_String()[pri:0, instance:testFindAll_String(se.nrm.dina.data.logic.DinaDataLogicNGTest)]" name="testFindAll_String" duration-ms="2" started-at="2016-02-10T12:13:56Z" finished-at="2016-02-10T12:13:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindAll_String -->
        <test-method status="PASS" signature="testFindById()[pri:0, instance:testFindById(se.nrm.dina.data.logic.DinaDataLogicNGTest)]" name="testFindById" duration-ms="2" started-at="2016-02-10T12:13:56Z" finished-at="2016-02-10T12:13:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindById -->
        <test-method status="PASS" signature="testFindByIdFailure()[pri:0, instance:testFindByIdFailure(se.nrm.dina.data.logic.DinaDataLogicNGTest)]" name="testFindByIdFailure" duration-ms="2" started-at="2016-02-10T12:13:56Z" finished-at="2016-02-10T12:13:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindByIdFailure -->
      </class> <!-- se.nrm.dina.data.logic.DinaDataLogicNGTest -->
      <class name="se.nrm.dina.data.util.UtilNGTest">
        <test-method status="PASS" signature="testConvertClassNameToClass()[pri:0, instance:testConvertClassNameToClass(se.nrm.dina.data.util.UtilNGTest)]" name="testConvertClassNameToClass" duration-ms="1" started-at="2016-02-10T12:13:56Z" finished-at="2016-02-10T12:13:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertClassNameToClass -->
        <test-method status="PASS" signature="testConvertClassNameToClassException()[pri:0, instance:testConvertClassNameToClassException(se.nrm.dina.data.util.UtilNGTest)]" name="testConvertClassNameToClassException" duration-ms="1" started-at="2016-02-10T12:13:56Z" finished-at="2016-02-10T12:13:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertClassNameToClassException -->
        <test-method status="PASS" signature="testReformClassNameEmptyName()[pri:0, instance:testReformClassNameEmptyName(se.nrm.dina.data.util.UtilNGTest)]" name="testReformClassNameEmptyName" duration-ms="0" started-at="2016-02-10T12:13:56Z" finished-at="2016-02-10T12:13:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReformClassNameEmptyName -->
        <test-method status="PASS" signature="testCreateNewInstance()[pri:0, instance:testCreateNewInstance(se.nrm.dina.data.util.UtilNGTest)]" name="testCreateNewInstance" duration-ms="1" started-at="2016-02-10T12:13:56Z" finished-at="2016-02-10T12:13:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateNewInstance -->
        <test-method status="PASS" signature="testFailedCreateNewInstance()[pri:0, instance:testFailedCreateNewInstance(se.nrm.dina.data.util.UtilNGTest)]" name="testFailedCreateNewInstance" duration-ms="1" started-at="2016-02-10T12:13:56Z" finished-at="2016-02-10T12:13:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFailedCreateNewInstance -->
        <test-method status="PASS" signature="testValidateEntityName()[pri:0, instance:testValidateEntityName(se.nrm.dina.data.util.UtilNGTest)]" name="testValidateEntityName" duration-ms="1" started-at="2016-02-10T12:13:56Z" finished-at="2016-02-10T12:13:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidateEntityName -->
        <test-method status="PASS" signature="testInvalidateEntityName()[pri:0, instance:testInvalidateEntityName(se.nrm.dina.data.util.UtilNGTest)]" name="testInvalidateEntityName" duration-ms="1" started-at="2016-02-10T12:13:56Z" finished-at="2016-02-10T12:13:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidateEntityName -->
        <test-method status="PASS" signature="testIsFieldsValid()[pri:0, instance:testIsFieldsValid(se.nrm.dina.data.util.UtilNGTest)]" name="testIsFieldsValid" duration-ms="1" started-at="2016-02-10T12:13:56Z" finished-at="2016-02-10T12:13:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsFieldsValid -->
        <test-method status="PASS" signature="testIsFieldsValidFailed()[pri:0, instance:testIsFieldsValidFailed(se.nrm.dina.data.util.UtilNGTest)]" name="testIsFieldsValidFailed" duration-ms="0" started-at="2016-02-10T12:13:56Z" finished-at="2016-02-10T12:13:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsFieldsValidFailed -->
        <test-method status="PASS" signature="testIsFieldsValidFailedExpected()[pri:0, instance:testIsFieldsValidFailedExpected(se.nrm.dina.data.util.UtilNGTest)]" name="testIsFieldsValidFailedExpected" duration-ms="1" started-at="2016-02-10T12:13:56Z" finished-at="2016-02-10T12:13:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsFieldsValidFailedExpected -->
        <test-method status="PASS" signature="testIsIntFieldFalse()[pri:0, instance:testIsIntFieldFalse(se.nrm.dina.data.util.UtilNGTest)]" name="testIsIntFieldFalse" duration-ms="1" started-at="2016-02-10T12:13:56Z" finished-at="2016-02-10T12:13:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsIntFieldFalse -->
        <test-method status="PASS" signature="testIsIntField()[pri:0, instance:testIsIntField(se.nrm.dina.data.util.UtilNGTest)]" name="testIsIntField" duration-ms="0" started-at="2016-02-10T12:13:56Z" finished-at="2016-02-10T12:13:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsIntField -->
        <test-method status="PASS" signature="testIsIntegerFieldException()[pri:0, instance:testIsIntegerFieldException(se.nrm.dina.data.util.UtilNGTest)]" name="testIsIntegerFieldException" duration-ms="0" started-at="2016-02-10T12:13:56Z" finished-at="2016-02-10T12:13:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsIntegerFieldException -->
        <test-method status="PASS" signature="testIsEntity()[pri:0, instance:testIsEntity(se.nrm.dina.data.util.UtilNGTest)]" name="testIsEntity" duration-ms="1" started-at="2016-02-10T12:13:56Z" finished-at="2016-02-10T12:13:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEntity -->
        <test-method status="PASS" signature="testIsIntegerField()[pri:0, instance:testIsIntegerField(se.nrm.dina.data.util.UtilNGTest)]" name="testIsIntegerField" duration-ms="0" started-at="2016-02-10T12:13:56Z" finished-at="2016-02-10T12:13:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsIntegerField -->
        <test-method status="PASS" signature="testIsEntityFalse()[pri:0, instance:testIsEntityFalse(se.nrm.dina.data.util.UtilNGTest)]" name="testIsEntityFalse" duration-ms="1" started-at="2016-02-10T12:13:56Z" finished-at="2016-02-10T12:13:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEntityFalse -->
        <test-method status="PASS" signature="testIsEntityFalseException()[pri:0, instance:testIsEntityFalseException(se.nrm.dina.data.util.UtilNGTest)]" name="testIsEntityFalseException" duration-ms="1" started-at="2016-02-10T12:13:56Z" finished-at="2016-02-10T12:13:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEntityFalseException -->
        <test-method status="PASS" signature="testIsCollection()[pri:0, instance:testIsCollection(se.nrm.dina.data.util.UtilNGTest)]" name="testIsCollection" duration-ms="1" started-at="2016-02-10T12:13:56Z" finished-at="2016-02-10T12:13:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsCollection -->
        <test-method status="PASS" signature="testIsCollectionFalse()[pri:0, instance:testIsCollectionFalse(se.nrm.dina.data.util.UtilNGTest)]" name="testIsCollectionFalse" duration-ms="2" started-at="2016-02-10T12:13:56Z" finished-at="2016-02-10T12:13:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsCollectionFalse -->
        <test-method status="PASS" signature="testGetEntity()[pri:0, instance:testGetEntity(se.nrm.dina.data.util.UtilNGTest)]" name="testGetEntity" duration-ms="1" started-at="2016-02-10T12:13:56Z" finished-at="2016-02-10T12:13:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetEntity -->
        <test-method status="PASS" signature="testGetEntityFailure()[pri:0, instance:testGetEntityFailure(se.nrm.dina.data.util.UtilNGTest)]" name="testGetEntityFailure" duration-ms="1" started-at="2016-02-10T12:13:56Z" finished-at="2016-02-10T12:13:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetEntityFailure -->
        <test-method status="PASS" signature="testValidateFields()[pri:0, instance:testValidateFields(se.nrm.dina.data.util.UtilNGTest)]" name="testValidateFields" duration-ms="1" started-at="2016-02-10T12:13:56Z" finished-at="2016-02-10T12:13:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidateFields -->
        <test-method status="PASS" signature="testGetIDFieldName_EntityBean()[pri:0, instance:testGetIDFieldName_EntityBean(se.nrm.dina.data.util.UtilNGTest)]" name="testGetIDFieldName_EntityBean" duration-ms="1" started-at="2016-02-10T12:13:56Z" finished-at="2016-02-10T12:13:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetIDFieldName_EntityBean -->
        <test-method status="PASS" signature="testGetIDFieldName_String()[pri:0, instance:testGetIDFieldName_String(se.nrm.dina.data.util.UtilNGTest)]" name="testGetIDFieldName_String" duration-ms="1" started-at="2016-02-10T12:13:56Z" finished-at="2016-02-10T12:13:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetIDFieldName_String -->
        <test-method status="PASS" signature="testIsNumric()[pri:0, instance:testIsNumric(se.nrm.dina.data.util.UtilNGTest)]" name="testIsNumric" duration-ms="0" started-at="2016-02-10T12:13:56Z" finished-at="2016-02-10T12:13:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsNumric -->
        <test-method status="PASS" signature="testMaxLimit()[pri:0, instance:testMaxLimit(se.nrm.dina.data.util.UtilNGTest)]" name="testMaxLimit" duration-ms="0" started-at="2016-02-10T12:13:56Z" finished-at="2016-02-10T12:13:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMaxLimit -->
        <test-method status="PASS" signature="testGetInstance()[pri:0, instance:testGetInstance(se.nrm.dina.data.util.UtilNGTest)]" name="testGetInstance" duration-ms="0" started-at="2016-02-10T12:13:56Z" finished-at="2016-02-10T12:13:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetInstance -->
        <test-method status="PASS" signature="testReformClassName()[pri:0, instance:testReformClassName(se.nrm.dina.data.util.UtilNGTest)]" name="testReformClassName" duration-ms="0" started-at="2016-02-10T12:13:56Z" finished-at="2016-02-10T12:13:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReformClassName -->
      </class> <!-- se.nrm.dina.data.util.UtilNGTest -->
      <class name="se.nrm.dina.data.jpa.DinaDaoImplTest">
        <test-method status="PASS" signature="testDinaDaoImplConstractor()[pri:0, instance:testDinaDaoImplConstractor(se.nrm.dina.data.jpa.DinaDaoImplTest)]" name="testDinaDaoImplConstractor" duration-ms="331" started-at="2016-02-10T12:13:50Z" finished-at="2016-02-10T12:13:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDinaDaoImplConstractor -->
        <test-method status="PASS" signature="testFindAll()[pri:0, instance:testFindAll(se.nrm.dina.data.jpa.DinaDaoImplTest)]" name="testFindAll" duration-ms="47" started-at="2016-02-10T12:13:51Z" finished-at="2016-02-10T12:13:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindAll -->
        <test-method status="PASS" signature="testFindAllWithConditionsException()[pri:0, instance:testFindAllWithConditionsException(se.nrm.dina.data.jpa.DinaDaoImplTest)]" name="testFindAllWithConditionsException" duration-ms="7" started-at="2016-02-10T12:13:51Z" finished-at="2016-02-10T12:13:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindAllWithConditionsException -->
        <test-method status="PASS" signature="testFindAllWithConditions1()[pri:0, instance:testFindAllWithConditions1(se.nrm.dina.data.jpa.DinaDaoImplTest)]" name="testFindAllWithConditions1" duration-ms="6" started-at="2016-02-10T12:13:51Z" finished-at="2016-02-10T12:13:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindAllWithConditions1 -->
        <test-method status="PASS" signature="testFindAllWithConditions2()[pri:0, instance:testFindAllWithConditions2(se.nrm.dina.data.jpa.DinaDaoImplTest)]" name="testFindAllWithConditions2" duration-ms="5" started-at="2016-02-10T12:13:51Z" finished-at="2016-02-10T12:13:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindAllWithConditions2 -->
        <test-method status="PASS" signature="testFindById()[pri:0, instance:testFindById(se.nrm.dina.data.jpa.DinaDaoImplTest)]" name="testFindById" duration-ms="17" started-at="2016-02-10T12:13:51Z" finished-at="2016-02-10T12:13:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindById -->
        <test-method status="PASS" signature="testFindByIdFailure()[pri:0, instance:testFindByIdFailure(se.nrm.dina.data.jpa.DinaDaoImplTest)]" name="testFindByIdFailure" duration-ms="6" started-at="2016-02-10T12:13:51Z" finished-at="2016-02-10T12:13:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindByIdFailure -->
        <test-method status="PASS" signature="testFindByIdFailure2()[pri:0, instance:testFindByIdFailure2(se.nrm.dina.data.jpa.DinaDaoImplTest)]" name="testFindByIdFailure2" duration-ms="15" started-at="2016-02-10T12:13:51Z" finished-at="2016-02-10T12:13:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindByIdFailure2 -->
        <test-method status="PASS" signature="testFindByIdForNoVisionEntities()[pri:0, instance:testFindByIdForNoVisionEntities(se.nrm.dina.data.jpa.DinaDaoImplTest)]" name="testFindByIdForNoVisionEntities" duration-ms="3" started-at="2016-02-10T12:13:51Z" finished-at="2016-02-10T12:13:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindByIdForNoVisionEntities -->
        <test-method status="PASS" signature="testFindByIdForNoVisionEntities1()[pri:0, instance:testFindByIdForNoVisionEntities1(se.nrm.dina.data.jpa.DinaDaoImplTest)]" name="testFindByIdForNoVisionEntities1" duration-ms="3" started-at="2016-02-10T12:13:51Z" finished-at="2016-02-10T12:13:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindByIdForNoVisionEntities1 -->
        <test-method status="PASS" signature="testFindByIdForNoVisionEntities2()[pri:0, instance:testFindByIdForNoVisionEntities2(se.nrm.dina.data.jpa.DinaDaoImplTest)]" name="testFindByIdForNoVisionEntities2" duration-ms="3" started-at="2016-02-10T12:13:51Z" finished-at="2016-02-10T12:13:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindByIdForNoVisionEntities2 -->
        <test-method status="PASS" signature="testFindByIdForNoVisionEntities3()[pri:0, instance:testFindByIdForNoVisionEntities3(se.nrm.dina.data.jpa.DinaDaoImplTest)]" name="testFindByIdForNoVisionEntities3" duration-ms="3" started-at="2016-02-10T12:13:51Z" finished-at="2016-02-10T12:13:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindByIdForNoVisionEntities3 -->
        <test-method status="PASS" signature="testFindByIdForNoVisionEntities4()[pri:0, instance:testFindByIdForNoVisionEntities4(se.nrm.dina.data.jpa.DinaDaoImplTest)]" name="testFindByIdForNoVisionEntities4" duration-ms="4" started-at="2016-02-10T12:13:51Z" finished-at="2016-02-10T12:13:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindByIdForNoVisionEntities4 -->
        <test-method status="PASS" signature="testFindByIdForNoVisionEntities5()[pri:0, instance:testFindByIdForNoVisionEntities5(se.nrm.dina.data.jpa.DinaDaoImplTest)]" name="testFindByIdForNoVisionEntities5" duration-ms="3" started-at="2016-02-10T12:13:51Z" finished-at="2016-02-10T12:13:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindByIdForNoVisionEntities5 -->
        <test-method status="PASS" signature="testFindByStringId()[pri:0, instance:testFindByStringId(se.nrm.dina.data.jpa.DinaDaoImplTest)]" name="testFindByStringId" duration-ms="4" started-at="2016-02-10T12:13:51Z" finished-at="2016-02-10T12:13:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindByStringId -->
        <test-method status="PASS" signature="testFindByStringIdFailure()[pri:0, instance:testFindByStringIdFailure(se.nrm.dina.data.jpa.DinaDaoImplTest)]" name="testFindByStringIdFailure" duration-ms="5" started-at="2016-02-10T12:13:51Z" finished-at="2016-02-10T12:13:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindByStringIdFailure -->
        <test-method status="PASS" signature="testFindByStringIdFailure2()[pri:0, instance:testFindByStringIdFailure2(se.nrm.dina.data.jpa.DinaDaoImplTest)]" name="testFindByStringIdFailure2" duration-ms="3" started-at="2016-02-10T12:13:51Z" finished-at="2016-02-10T12:13:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindByStringIdFailure2 -->
        <test-method status="PASS" signature="testFindByReference()[pri:0, instance:testFindByReference(se.nrm.dina.data.jpa.DinaDaoImplTest)]" name="testFindByReference" duration-ms="3" started-at="2016-02-10T12:13:51Z" finished-at="2016-02-10T12:13:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindByReference -->
        <test-method status="PASS" signature="testCreate()[pri:0, instance:testCreate(se.nrm.dina.data.jpa.DinaDaoImplTest)]" name="testCreate" duration-ms="3" started-at="2016-02-10T12:13:51Z" finished-at="2016-02-10T12:13:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreate -->
        <test-method status="PASS" signature="testCreateFailure()[pri:0, instance:testCreateFailure(se.nrm.dina.data.jpa.DinaDaoImplTest)]" name="testCreateFailure" duration-ms="20" started-at="2016-02-10T12:13:51Z" finished-at="2016-02-10T12:13:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateFailure -->
        <test-method status="PASS" signature="testCreateFailure2()[pri:0, instance:testCreateFailure2(se.nrm.dina.data.jpa.DinaDaoImplTest)]" name="testCreateFailure2" duration-ms="3" started-at="2016-02-10T12:13:51Z" finished-at="2016-02-10T12:13:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateFailure2 -->
        <test-method status="PASS" signature="testMerge()[pri:0, instance:testMerge(se.nrm.dina.data.jpa.DinaDaoImplTest)]" name="testMerge" duration-ms="3" started-at="2016-02-10T12:13:51Z" finished-at="2016-02-10T12:13:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMerge -->
        <test-method status="PASS" signature="testMergeFailure1()[pri:0, instance:testMergeFailure1(se.nrm.dina.data.jpa.DinaDaoImplTest)]" name="testMergeFailure1" duration-ms="15" started-at="2016-02-10T12:13:51Z" finished-at="2016-02-10T12:13:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMergeFailure1 -->
        <test-method status="PASS" signature="testMergeFailure2()[pri:0, instance:testMergeFailure2(se.nrm.dina.data.jpa.DinaDaoImplTest)]" name="testMergeFailure2" duration-ms="709" started-at="2016-02-10T12:13:51Z" finished-at="2016-02-10T12:13:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMergeFailure2 -->
        <test-method status="PASS" signature="testMergeFailure3()[pri:0, instance:testMergeFailure3(se.nrm.dina.data.jpa.DinaDaoImplTest)]" name="testMergeFailure3" duration-ms="3" started-at="2016-02-10T12:13:52Z" finished-at="2016-02-10T12:13:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMergeFailure3 -->
        <test-method status="PASS" signature="testUpdateByJPQL()[pri:0, instance:testUpdateByJPQL(se.nrm.dina.data.jpa.DinaDaoImplTest)]" name="testUpdateByJPQL" duration-ms="4" started-at="2016-02-10T12:13:52Z" finished-at="2016-02-10T12:13:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateByJPQL -->
        <test-method status="PASS" signature="testUpdateByJPQLFailure()[pri:0, instance:testUpdateByJPQLFailure(se.nrm.dina.data.jpa.DinaDaoImplTest)]" name="testUpdateByJPQLFailure" duration-ms="3" started-at="2016-02-10T12:13:52Z" finished-at="2016-02-10T12:13:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateByJPQLFailure -->
        <test-method status="PASS" signature="testDelete()[pri:0, instance:testDelete(se.nrm.dina.data.jpa.DinaDaoImplTest)]" name="testDelete" duration-ms="2" started-at="2016-02-10T12:13:52Z" finished-at="2016-02-10T12:13:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelete -->
        <test-method status="PASS" signature="testDeleteFailure1()[pri:0, instance:testDeleteFailure1(se.nrm.dina.data.jpa.DinaDaoImplTest)]" name="testDeleteFailure1" duration-ms="7" started-at="2016-02-10T12:13:52Z" finished-at="2016-02-10T12:13:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteFailure1 -->
        <test-method status="PASS" signature="testDeleteFailure2()[pri:0, instance:testDeleteFailure2(se.nrm.dina.data.jpa.DinaDaoImplTest)]" name="testDeleteFailure2" duration-ms="5" started-at="2016-02-10T12:13:52Z" finished-at="2016-02-10T12:13:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteFailure2 -->
        <test-method status="PASS" signature="testGetEntityByJPQL()[pri:0, instance:testGetEntityByJPQL(se.nrm.dina.data.jpa.DinaDaoImplTest)]" name="testGetEntityByJPQL" duration-ms="3" started-at="2016-02-10T12:13:52Z" finished-at="2016-02-10T12:13:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetEntityByJPQL -->
        <test-method status="PASS" signature="testGetEntityByJPQLFailure1()[pri:0, instance:testGetEntityByJPQLFailure1(se.nrm.dina.data.jpa.DinaDaoImplTest)]" name="testGetEntityByJPQLFailure1" duration-ms="10" started-at="2016-02-10T12:13:52Z" finished-at="2016-02-10T12:13:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetEntityByJPQLFailure1 -->
        <test-method status="PASS" signature="testGetEntityByJPQLFailure2()[pri:0, instance:testGetEntityByJPQLFailure2(se.nrm.dina.data.jpa.DinaDaoImplTest)]" name="testGetEntityByJPQLFailure2" duration-ms="10" started-at="2016-02-10T12:13:52Z" finished-at="2016-02-10T12:13:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetEntityByJPQLFailure2 -->
        <test-method status="PASS" signature="testGetCountByQuery()[pri:0, instance:testGetCountByQuery(se.nrm.dina.data.jpa.DinaDaoImplTest)]" name="testGetCountByQuery" duration-ms="3" started-at="2016-02-10T12:13:52Z" finished-at="2016-02-10T12:13:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCountByQuery -->
        <test-method status="PASS" signature="testGetCountByQueryFailure()[pri:0, instance:testGetCountByQueryFailure(se.nrm.dina.data.jpa.DinaDaoImplTest)]" name="testGetCountByQueryFailure" duration-ms="4" started-at="2016-02-10T12:13:52Z" finished-at="2016-02-10T12:13:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCountByQueryFailure -->
      </class> <!-- se.nrm.dina.data.jpa.DinaDaoImplTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
